name: Release to PyPI

on:
  release:
    types: [published]

jobs:
  quality-check:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y portaudio19-dev ffmpeg

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        version: "latest"
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"

    - name: Create virtual environment
      run: uv venv .venv

    - name: Install dependencies
      run: |
        source .venv/bin/activate
        uv pip install --editable ".[dev]"

    - name: Run linting
      run: make lint

    - name: Run unit tests
      run: make test-unit

  build-and-publish:
    needs: quality-check
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for trusted publishing
      contents: read

    steps:
    - uses: actions/checkout@v4

    - name: Extract version from tag
      id: get_version
      run: |
        # Remove 'v' prefix from tag (e.g., v0.0.1 -> 0.0.1)
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Publishing version: $VERSION"

    - name: Update version in __init__.py
      run: |
        sed -i 's/__version__ = "0.0.0"/__version__ = "${{ steps.get_version.outputs.version }}"/' voicebridge/__init__.py
        cat voicebridge/__init__.py | grep __version__

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Check package
      run: twine check dist/*

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
